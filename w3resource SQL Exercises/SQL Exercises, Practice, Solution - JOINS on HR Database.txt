/**
1. From the following tables, write a SQL query to find the first name, 
last name, department number, and department name for each employee.
**/
SELECT E.first_name, E.last_name, E.department_id, D.department_name 
FROM employees E 
JOIN departments D 
  ON E.department_id = D.department_id;

/**
2. From the following tables, write a SQL query to find the first name, 
last name, department, city, and state province for each employee.
**/
SELECT E.first_name, E.last_name, D.department_name, L.city, L.state_province  FROM employees E 
JOIN departments D  
  ON E.department_id = D.department_id  
JOIN locations L
   ON D.location_id = L.location_id;

/**
3. From the following table, write a SQL query to find the first name, 
last name, salary, and job grade for all employees.
**/
SELECT E.first_name, E.last_name, E.salary, J.grade_level
FROM employees E 
JOIN job_grades J
 ON E.salary BETWEEN J.lowest_sal AND J.highest_sal;

/**
4. From the following tables, write a SQL query to find all those 
employees who work in department ID 80 or 40. Return first name, 
last name, department number and department name.
**/
SELECT e.first_name, e.last_name, e.department_id, d.department_name 
FROM employees e JOIN departments d
ON e.department_id = d.department_id
WHERE e.department_id = 80 OR e.department_id = 40
ORDER BY e.last_name;

/**
5. From the following tables, write a SQL query to find those employees 
whose first name contains the letter ‘z’. Return first name, last name, 
department, city, and state province.
**/
SELECT E.first_name, E.last_name, D.department_name, L.city, L.state_province  
FROM employees E JOIN departments D  
  ON E.department_id = D.department_id 
JOIN locations L 
  ON D.location_id = L.location_id 
WHERE E.first_name LIKE '%z%';

/**
6. From the following tables, write a SQL query to find all departments, 
including those without employees. Return first name, last name, 
department ID, department name.
**/
SELECT E.first_name, E.last_name, E.department_id, D.department_name 
FROM employees E RIGHT OUTER JOIN departments D
ON E.department_id = D.department_id
;

/**
7. From the following table, write a SQL query to find the employees who 
earn less than the employee of ID 182. Return first name, last name and salary.
**/
SELECT E.first_name, E.last_name, E.salary 
FROM employees E
INNER JOIN employees S
ON E.salary < S.salary
AND S.employee_id = 182;

/**
8. From the following table, write a SQL query to find the employees and 
their managers. Return the first name of the employee and manager.
**/
SELECT E.first_name as Employee_name, M.first_name as Manager_name
FROM employees E
JOIN employees M
ON e.manager_id = m.employee_id;

/**
9. From the following tables, write a SQL query to display the department 
name, city, and state province for each department.
**/
SELECT d.department_name, l.city, l.state_province
FROM departments d JOIN locations l
ON d.location_id = l.location_id;

/**
10. From the following tables, write a SQL query to find out which 
employees have or do not have a department. Return first name, last name,
 department ID, department name.
**/
SELECT E.first_name, E.last_name, E.department_id, D.department_name
FROM employees E LEFT OUTER JOIN departments D
ON E.department_id = D.department_id;

/**
11. From the following table, write a SQL query to find the employees and 
their managers. Those managers do not work under any manager also appear 
in the list. Return the first name of the employee and manager.
**/
SELECT E.first_name as "Employee Name", M.first_name as "Manager"
FROM employees E
LEFT OUTER JOIN employees M
ON E.manager_id = M.employee_id;

/**
12. From the following tables, write a SQL query to find the employees who
 work in the same department as the employee with the last name Taylor. 
Return first name, last name and department ID.
**/
SELECT E.first_name, E.last_name, E.department_id
FROM employees E
JOIN employees S
ON E.department_id = S.department_id
AND S.last_name = 'Taylor';

/**
13. From the following tables, write a SQL query to find all employees who 
joined on or after 1st January 1993 and on or before 31 August 1997. 
Return job title, department name, employee name, and joining date of the job.
**/
SELECT J.job_title, D.department_name, CONCAT(E.first_name, E.last_name) as employee_name, JH.start_date
FROM job_history JH JOIN jobs J
ON JH.job_id = J.job_id
JOIN  departments D
ON D.department_id = JH.department_id
JOIN employees E
ON E.employee_id = JH.employee_id
WHERE jh.start_date >= '1993-01-01' AND jh.start_date <= '1997-08-31';

/**
14. From the following tables, write a SQL query to calculate the 
difference between the maximum salary of the job and the employee's 
salary. Return job title, employee name, and salary difference.
**/
SELECT job_title, first_name || ' ' || last_name AS Employee_name, max_salary - salary AS salary_difference 
FROM employees 
NATURAL JOIN jobs;

/**
15. From the following table, write a SQL query to calculate the average 
salary, the number of employees receiving commissions in that department. 
Return department name, average salary and number of employees.
**/
SELECT d.department_name, AVG(e.salary) AS average_salary, COUNT(e.commission_pct) AS commission_count
FROM departments d
JOIN employees e ON d.department_id = e.department_id
GROUP BY d.department_name;

/**
16. From the following tables, write a SQL query to calculate the 
difference between the maximum salary and the salary of all the employees 
who work in the department of ID 80. Return job title, employee name and 
salary difference.
**/
SELECT j.job_title, CONCAT(e.first_name, ' ', e.last_name) as employee_name, j.max_salary - e.salary as salary_difference
FROM employees e JOIN jobs j
ON e.job_id = j.job_id
WHERE e.department_id = 80;

/**
17. From the following table, write a SQL query to find the name of the 
country, city, and departments, which are running there.
**/
SELECT c.country_name, l.city, d.department_name
FROM countries c
JOIN locations l ON c.country_id = l.country_id
JOIN departments d ON l.location_id = d.location_id;

/**
18. From the following tables, write a SQL query to find the department 
name and the full name (first and last name) of the manager.
**/
SELECT d.department_name, concat(e.first_name,  ' ' ,e.last_name) as full_nam
FROM departments d
JOIN employees e
ON D.manager_id = E.employee_id;

/**
19. From the following table, write a SQL query to calculate the average 
salary of employees for each job title.
**/
SELECT j.job_title, AVG(e.salary)
FROM employees e JOIN jobs j
ON e.job_id = j.job_id
GROUP BY j.job_title;

/**
20. From the following table, write a SQL query to find the employees who 
earn $12000 or more. Return employee ID, starting date, end date, 
job ID and department ID.
**/
SELECT e.employee_id, jh.start_date, jh.end_date, jh.job_Id, e.department_id
FROM employees e JOIN job_history jh
ON e.employee_id = jh.employee_id
WHERE e.salary >= 12000;

/**
21. From the following tables, write a SQL query to find out which 
departments have at least two employees. Group the result set on country 
name and city. Return country name, city, and number.
**/
SELECT c.country_name, l.city, count(d.department_id)
FROM countries c JOIN locations l
ON c.country_id = l.country_id
JOIN departments d
ON d.location_id = l.location_id
WHERE d.department_id IN (
           SELECT department_id FROM employees
     GROUP BY department_id
HAVING COUNT(department_id) >=2)
GROUP BY c.country_name, l.city;

/**
22. From the following tables, write a SQL query to find the department 
name, full name (first and last name) of the manager and their city.
**/
SELECT d.department_name, concat(e.first_name, ' ' , e.last_name) as full_name, l.city
FROM employees e
JOIN departments d
ON d.manager_id = e.employee_id
JOIN locations l
ON d.location_id = l.location_id;
SELECT jh.employee_id, j.job_title, (jh.end_date - jh.start_date) as DAYS
FROM jobs j JOIN job_history jh
ON J.job_id = jh.job_id
WHERE jh.department_id = 80;

/**
24. From the following tables, write a SQL query to find full name 
(first and last name), and salary of all employees working in any 
department in the city of London.
**/
SELECT CONCAT(e.first_name, ' ', e.last_name) as full_name, e.salary
FROM employees e JOIN departments d
ON e.department_id = d.department_id
JOIN locations l
ON l.location_id = d.location_id
WHERE l.city = 'London';

/**
25. From the following tables, write a SQL query to find full name 
(first and last name), job title, start and end date of last jobs of 
employees who did not receive commissions.
**/
SELECT CONCAT(e.first_name, ' ', e.last_name) as employee_name, j.job_title, h.*
FROM employees e
JOIN job_history h ON e.employee_id = h.employee_id
join jobs j ON j.job_id = e.job_id
JOIN(
      select employee_id,MAX(start_date) as 
      max_start_date, max(end_date) as max_end_date
From job_history
GROUP BY employee_id) h2 ON h.employee_id = h2.employee_id
AND h.end_date = h2.max_end_date
WHERE e.commission_pct = 0;

/**
26. From the following tables, write a SQL query to find the department 
name, department ID, and number of employees in each department.
**/
SELECT d.department_name, e.*
 FROM departments d
JOIN (SELECT COUNT(employee_id), department_id
       FROM employees
    GROUP BY department_id) e ON e.department_id = d.department_id;

/**
27. From the following tables, write a SQL query to find out the full 
name (first and last name) of the employee with an ID and the name of the 
country where he/she is currently employed.
**/
SELECT concat(e.first_name, ' ', e.last_name) as full_name, e.employee_id, c.country_name
FROM employees e
 JOIN departments d
ON e.department_id = d.department_id
 JOIN locations l
ON l.location_id = d.location_id
 JOIN countries c
ON c.country_id = l.country_id;
