1. From the following table, write a SQL query to calculate total purchase amount of all orders. Return total purchase amount.
select sum(purch_amt) FROM orders;

2. From the following table, write a SQL query to calculate the average purchase amount of all orders. Return average purchase amount. 
select avg(purch_amt) FROM orders;

3. From the following table, write a SQL query that counts the number of unique salespeople. Return number of salespeople
SELECT COUNT(distinct salesman_id) FROM orders;

4. From the following table, write a SQL query to count the number of customers. Return number of customers.  
select count(customer_id) from customer;

5. From the following table, write a SQL query to determine the number of customers who received at least one grade for their activity.
select count(grade) from customer;

6. From the following table, write a SQL query to find the maximum purchase amount.  
SELECT max(purch_amt) from orders;

7. From the following table, write a SQL query to find the minimum purchase amount. 
select min(purch_amt) from orders;

8. From the following table, write a SQL query to find the highest grade of the customers in each city. Return city, maximum grade.
SELECT city, MAX(grade) from customer
group by city;

9. From the following table, write a SQL query to find the highest purchase amount ordered by each customer. Return customer ID, maximum purchase amount.
SELECT customer_id, max(purch_amt) FROM orders
GROUP BY customer_id;

10. From the following table, write a SQL query to find the 
highest purchase amount ordered by each customer on a particular
 date. Return, order date and highest purchase amount.
SELECT customer_id, ord_date, MAX(purch_amt) FROM orders
GROUP BY customer_id, ord_date
order by customer_id;

11. From the following table, write a SQL query to determine
 the highest purchase amount made by each salesperson on
 '2012-08-17'. Return salesperson ID, purchase amount 
SELECT salesman_id, max(purch_amt)
FROM orders
WHERE ord_date = '2012-08-17'
GROUP BY salesman_id;

12. From the following table, write a SQL query to find the 
highest order (purchase) amount by each customer on a 
particular order date. Filter the result by highest order 
(purchase) amount above 2000.00. Return customer id, order
 date and maximum purchase amount.
SELECT customer_id, ord_date, max(purch_amt)
FROM orders
group by customer_id, ord_date
HAVING max(purch_amt) > 2000;

13. From the following table, write a SQL query to find the
 maximum order (purchase) amount in the range 2000 - 6000 
(Begin and end values are included.) by combination of each 
customer and order date. Return customer id, order date and maximum purchase amount.
SELECT customer_id, ord_date, max(purch_amt)
FROM orders
where purch_amt between 2000 and 6000
GROUP BY customer_id, ord_date;

14. From the following table, write a SQL query to find the 
maximum order (purchase) amount based on the combination of 
each customer and order date. Filter the rows for maximum order
 (purchase) amount is either 2000, 3000, 5760, 6000. Return 
customer id, order date and maximum purchase amount.
SELECT customer_id, ord_date, max(purch_amt)
FROM orders
WHERE purch_amt IN (2000, 3000, 5760, 6000)
GROUP BY customer_id, ord_date;

15. From the following table, write a SQL query to determine
 the maximum order amount for each customer. The customer ID 
should be in the range 3002 and 3007(Begin and end values are 
included.). Return customer id and maximum purchase amount.
SELECT customer_id, MAX(purch_amt)
FROM orders
WHERE customer_id BETWEEN 3002 AND 3007
GROUP BY customer_id;

16. From the following table, write a SQL query to find the
 maximum order (purchase) amount for each customer. The customer
 ID should be in the range 3002 and 3007(Begin and end values
 are included.). Filter the rows for maximum order (purchase) 
amount is higher than 1000. Return customer id and maximum purchase amount.
SELECT customer_id, MAX(purch_amt)
FROM orders
WHERE customer_id BETWEEN 3002 and 3007
GROUP BY customer_id
HAVING MAX(purch_amt) > 1000;

17. From the following table, write a SQL query to determine the
 maximum order (purchase) amount generated by each salesperson. 
Filter the rows for the salesperson ID is in the range 5003 and
 5008 (Begin and end values are included.). Return salesperson id and maximum purchase amount.
SELECT salesman_id, MAX(purch_amt)
FROM orders
WHERE salesman_id BETWEEN 5003 and 5008
GROUP BY salesman_id;

18. From the following table, write a SQL query to count all the orders generated on '2012-08-17'. Return number of orders.
SELECT COUNT(*) FROM orders
WHERE ord_date = '2012-08-17';

19. From the following table, write a SQL query to count the number of salespeople in a city. Return number of salespeople.
SELECT count(city) FROM salesman;

20. From the following table, write a SQL query to count the
 number of orders based on the combination of each order date and salesperson. Return order date, salesperson id.
SELECT salesman_id, ord_date, count(salesman_id)
FROM orders
GROUP BY salesman_id, ord_date;

21. From the following table, write a SQL query to calculate the average product price. Return average product price.
SELECT avg(pro_price)
from item_mast;

22. From the following table, write a SQL query to count the number of products whose price are higher than or equal to 350. Return number of products.
SELECT COUNT(*) from item_mast
WHERE pro_price >= 350;

23. From the following table, write a SQL query to compute the average price for unique companies. Return average price and company id.
SELECT pro_com, avg(pro_price) FROM item_mast
group by pro_com;

24. From the following table, write a SQL query to compute the sum of the allotment amount of all departments. Return sum of the allotment amount.
SELECT sum(dpt_allotment)
FROM emp_department;

25. From the following table, write a SQL query to count the number of employees in each department. Return department code and number of employees.
SELECT emp_dept, COUNT(*) FROM emp_details
GROUP BY emp_dept;













